// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = 'https://whxmjebukensinfduber.supabase.co';
const SUPABASE_PUBLISHABLE_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndoeG1qZWJ1a2Vuc2luZmR1YmVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTYxNzAyOTUsImV4cCI6MjA3MTc0NjI5NX0.YSXTuTpaNvBQxPVNiH8433vHwQ6HSz1xO68XAH-VK38';

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    fetch: (input, init) => {
      try {
        const rawUrl = typeof input === 'string' ? input : (input as URL).toString();
        const cb = `cb=${Date.now()}`;
        const urlWithBuster = rawUrl.includes('?') ? `${rawUrl}&${cb}` : `${rawUrl}?${cb}`;
        return fetch(urlWithBuster, {
          ...init,
          cache: 'no-store',
          headers: {
            ...(init?.headers || {}),
            'Cache-Control': 'no-cache, no-store, must-revalidate',
            Pragma: 'no-cache',
            Expires: '0',
          },
        });
      } catch {
        // Fallback without URL manipulation
        return fetch(input as RequestInfo, {
          ...init,
          cache: 'no-store',
          headers: {
            ...(init?.headers || {}),
            'Cache-Control': 'no-cache, no-store, must-revalidate',
            Pragma: 'no-cache',
            Expires: '0',
          },
        });
      }
    },
  },
});